from keras.models import load_model
from parse_cat_dog_data import *

#Instantiate model using the HDF5 version
model = load_model('convolutional2D_0.h5')

#Create a cats_and_dogs object, the current project's data retrieiving  and formatting class
data = cats_and_dogs(10, 0)

#Retrieve the training and test sets generated by the data object class method get_data()
(x_predict, x_predict_labels) = data.get_data_set_for_predictions()

#print(x_predict)
print(x_predict_labels)

#Convert list returned by the method above into a numpy array to be processed by the predict method for the current model
x_predict = np.asarray(x_predict)
x_predict = x_predict.reshape(x_predict.shape[0], 32, 32, 3)
x_predict = x_predict.astype('float32')
x_predict /= 255

#Make predictions based on the data retrieved
predictions = model.predict_on_batch(x_predict)

#Print predictions from model rounded which is appropriate since the activation function used in the last layer of the
#neural network is sigmoid which produces values between 0 and 1. The values produced by the method, predict_on_batch,
#represent values that correspond to whether an image of a cat or a dog was processed. 1 corresponds to cat and 0 to dog.
print(np.round(predictions))